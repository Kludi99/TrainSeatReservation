@{
    ViewData["Title"] = "Home Page";
}
<div class="text-center">
    @using (Html.BeginForm("Index", "Route", FormMethod.Post))
    {
        <p>Szukaj połączenia</p>
        <label for="firstStation">Z:</label><input type="text" id="firstStation" name="firstStation" class="station" @*data-autocomplete-url="@Url.Action("StationsList")"*@ />
        @Html.Hidden("firstStationId");
        <label for="lastStation">Do:</label><input type="text" id="lastStation" name="lastStation" class="station" @*data-autocomplete-url="@Url.Action("StationsList")"*@ />
        @Html.Hidden("lastStationId");
        <p>Data podróży: <input type="date" id="datepicker"> <input type="time" id="time"  /> </p>
        @Html.Hidden("date");
        @Html.Hidden("timeValue");
        @Html.Hidden("datePickerValue");
        <button type="submit" id="submitButton">Szukaj</button>
    }


    @*  <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>*@
</div>
<script type="text/javascript">


    $(document).ready(function () {
        datepicker.min = new Date().toISOString().split("T")[0];

        var dateToday = new Date();
      //  alert(dateToday.toLocaleString());
        var datepickerValue = new Date();
        $("#datepicker").change(function () {
            $("#date").val($("#datepicker").val().toString());
           // alert("Handler for .change() called.");
            datepickerValue = new Date($("#datepicker").val());
            //alert(dateToday.getDate());
            if (dateToday.getDate() === datepickerValue.getDate() && dateToday.getMonth() === datepickerValue.getMonth() && dateToday.getFullYear() === datepickerValue.getFullYear()) {
             //   alert("THE SAME DAY");
                var timeNow = dateToday.toLocaleTimeString();
                var hour = timeNow.split(":")[0];
                var minutes = timeNow.split(":")[1];
                var stringTime = hour + ":" + minutes;
              //  alert(timeNow);
                $("#time").attr('min', stringTime);// = dateToday.now();
            }

        });
        $("#time").change(function () {
            $("#timeValue").val($("#time").val().toString());
            // alert("Handler for .change() called.");


        });

        $(".station").autocomplete({
            source: function (request, resp) {
                $.ajax({
                    url: "@Url.Action("StationsList")",
                    type: "POST",
                    dataType: "json",
                    data: { prefix: request.term },
                    success: function (data) {
                        console.log(data);
                        resp($.map(data.data, function (item) {
                            console.log(item);
                            return { label: item.name, value: item.name, id: item.id };
                        }))
                    },

                });
            },
            select: function (event, ui) {
               // var firstStation = $("#firstStation").val();
               // var lastStation = $("#lastStation").val();
                //alert(JSON.stringify(ui));
                //alert(JSON.stringify(event));
                //alert(firstStation);
                //alert(ui);
                if ($("#firstStation").is(":focus")) {
                    //if (firstStation == ui.item.value)
                    $('#firstStationId').val(ui.item.id);
                }
                if ($("#lastStation").is(":focus")) {
                    $('#lastStationId').val(ui.item.id);
                }
                // $('#firstStation').val(ui.item.name);
            },
            messages: {
                noResults: "",
                results: function (count) {
                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                }
            }
        });


    });

</script>